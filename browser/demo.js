/*! min-log@2.1.0 by chunpu */
!function(e,o){"object"==typeof exports&&"object"==typeof module?module.exports=o():"function"==typeof define&&define.amd?define([],o):"object"==typeof exports?exports.demo=o():e.demo=o()}(this,function(){return function(e){function o(t){if(n[t])return n[t].exports;var r=n[t]={exports:{},id:t,loaded:!1};return e[t].call(r.exports,r,r.exports,o),r.loaded=!0,r.exports}var n={};return o.m=e,o.c=n,o.p="",o(0)}([function(e,o){function n(){for(var e=$("form").serializeArray(),o=0;o<e.length;o++){var n=e[o].name,r=e[o].value;"outputer"===n?log.sdk.setOutputer(r):"name"===n?log.sdk.setName(r):"level"===n&&log.sdk.setLevel(log.levels[r.toUpperCase()])}t()}function t(){function e(e){setTimeout(e,n),n+=o}var o=300,n=0;e(function(){log.error("-------------------------")}),e(function(){i.debug("this is",i.name)}),e(function(){u.debug("this is",u.name)}),e(function(){r.error("this is",r.name,"my color is red")}),e(function(){u.warn("this is warn level")}),e(function(){u.info("this is error level")}),e(function(){i.info("this is info level")}),e(function(){i.debug("this is debug level")}),e(function(){i.verbose("this is verbose level")}),e(function(){i.enabled&&i.debug("put mock code block in `if (log.enabled)`")})}var r=log.getLogger({name:"error",color:"red"}),i=log.getLogger("worker:a"),u=log.getLogger("worker:b");$(function(){$("input").on("click",function(){n()}),n()})}])});
//# sourceMappingURL=demo.js.map